---


- name: '/etc/sysctl.d/socket_backlog.conf'
  copy:
    dest:  /etc/sysctl.d/socket_backlog.conf
    owner: root
    group: root
    mode:  '0644'
    content: |
      #
      # 16MB per socket - which sounds like a lot, but will virtually never
      # consume that much.
      #
      net.core.rmem_max = 16777216
      net.core.wmem_max = 16777216
      #
      # Increase the number of outstanding syn requests allowed.
      # c.f. The use of syncookies.
      net.ipv4.tcp_max_syn_backlog = 4096
      net.ipv4.tcp_syncookies = 1
      #
      # The maximum number of "backlogged sockets".  Default is 128.
      net.core.somaxconn = 1024


##
## MariaDB
##
- name: 'apt mariadb server'
  apt:
    name:
      - mariadb-server
      - mariadb-client
      - mariadb-common
    state: latest
  when: install_mariadb



##
## mkcert
##
- name: "check if mkcert already downloaded"
  stat:
    path: "/usr/local/bin/mkcert"
  register: stat_mkcert

- name: "download mkcert"
  shell:
    #cmd: '/usr/bin/wget -O /usr/local/bin/mkcert "https://github.com/FiloSottile/mkcert/releases/download/v1.4.1/mkcert-v1.4.1-linux-amd64" ; /bin/chmod 0755 /usr/local/bin/mkcert'
    cmd: "/usr/bin/wget -O /usr/local/bin/mkcert 'https://github.com/FiloSottile/mkcert/releases/download/v1.4.3/mkcert-v1.4.3-linux-{% if ansible_architecture=='x86_64' %}amd64{% else %}arm64{% endif %}' ; /bin/chmod 0755 /usr/local/bin/mkcert"
  when: not stat_mkcert.stat.exists

- name: /usr/local/sbin/apache2_certs.sh
  copy:
    dest:  '/usr/local/sbin/apache2_certs.sh'
    owner: root
    group: root
    mode:  '0755'
    content: |+
      #!/bin/bash
      export CAROOT="/etc/ssl/private"
      cd /etc/ssl/private
      /usr/local/bin/mkcert -install -ecdsa
      /usr/local/bin/mkcert -ecdsa  starwarsccg.org "*.starwarsccg.org" localhost 127.0.0.1 ::1 0.0.0.0
      cp starwarsccg.org+5.pem ../certs/
      cp rootCA.pem ../certs/

- name: apache2_certs.sh
  shell:
    cmd: '/usr/local/sbin/apache2_certs.sh'

##
## apache2
##
- name: 'apt install apache, mariadb client, and php'
  apt:
    name:
      - libnss3-tools
      - ca-certificates
      - python3-pip
      - apache2
      #- mariadb-client
      #- mariadb-common
      - php
      - libapache2-mod-php
      - php-cgi
      - php-curl
      - php-gd
      - php-intl
      - php-json
      - php-mbstring
      - php-mysql
      - php-soap
      - php-xml
      - php-xmlrpc
      - php-zip
    state: latest


- name: /var/run/apache2
  file:
    dest:  /var/run/apache2
    owner: www-data
    group: www-data
    mode:  '0770'
    state: directory

- name: '/etc/apache2/apache2.conf'
  copy:
    dest: /etc/apache2/apache2.conf
    owner: 'root'
    group: 'www-data'
    mode:  '0644'
    src:   "{{ role_path }}/files/apache2.conf"

- name: '/etc/apache2/mods-available/mpm_prefork.conf'
  copy:
    dest: /etc/apache2/mods-available/mpm_prefork.conf
    owner: 'root'
    group: 'www-data'
    mode:  '0644'
    src:   "{{ role_path }}/files/mpm_prefork.conf"

- name: /etc/apache2/ports.conf
  template:
    dest:  /etc/apache2/ports.conf
    owner: 'root'
    group: 'www-data'
    mode:  '0644'
    src:   "{{ role_path }}/templates/ports.conf.j2"

- name: "/etc/apache2/conf-available/{{ item }}"
  copy:
    dest:  "/etc/apache2/conf-available/{{ item }}"
    owner: 'root'
    group: 'www-data'
    mode:  '0644'
    src:   "{{ role_path }}/files/{{ item }}"
  with_items:
    - 'security.conf'
    - 'ssl.conf'

- name: enable conf
  file:
    ## dest is the link being created
    ## src  is what the link points at
    dest:  "/etc/apache2/conf-enabled/{{ item }}"
    src:   "/etc/apache2/conf-available/{{ item }}"
    state: link
  with_items:
    - 'security.conf'
    - 'ssl.conf'

- name: disable all default mods and sites
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    ##
    ## !! The trailing slash will remove the contents of the dirs !!
    ## !! remove the trailing slash, and you remove the dir !!
    ##
    - "/etc/apache2/mods-enabled/"
    - "/etc/apache2/sites-available/"
    - "/etc/apache2/sites-enabled/"

- name: create mods and site directories
  file:
    state: directory
    path:  "{{ item }}"
    owner: 'root'
    group: 'www-data'
    mode:  '2750'
  with_items:
    - "/etc/apache2"
    - "/etc/apache2/mods-available"
    - "/etc/apache2/mods-enabled/"
    - "/etc/apache2/sites-available/"
    - "/etc/apache2/sites-enabled/"
    - "/etc/apache2/conf-available/"
    - "/etc/apache2/conf-enabled/"
    - "/var/www/"
    - "/var/www/html/"



- name: enable mods
  file:
    ## dest is the link being created
    ## src  is what the link points at
    dest:  "/etc/apache2/mods-enabled/{{ item }}"
    src:   "/etc/apache2/mods-available/{{ item }}"
    state: link
  with_items:
    - 'access_compat.load'
    - 'auth_basic.load'
    - 'authn_core.load'
    - 'authn_file.load'
    - 'authz_core.load'
    - 'authz_groupfile.load'
    - 'authz_host.load'
    - 'authz_user.load'
    - 'alias.load'
    - 'deflate.conf'
    - 'deflate.load'
    - 'dir.conf'
    - 'dir.load'
    - 'env.load'
    - 'filter.load'
    - 'mime.conf'
    - 'mime.load'
    - 'negotiation.conf'
    - 'negotiation.load'
    - 'mpm_prefork.conf'
    - 'mpm_prefork.load'
    - 'reqtimeout.conf'
    - 'reqtimeout.load'
    - 'rewrite.load'
    - 'setenvif.conf'
    - 'setenvif.load'
    - 'slotmem_shm.load'
    - 'socache_shmcb.load'
    - 'xml2enc.load'
    - 'ssl.load'
    - 'ssl.conf'
    - 'php7.4.load'
    - 'php7.4.conf'
    - 'usertrack.load'
    - 'headers.load'


- name: disable mods
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - 'mpm_event.conf'
    - 'mpm_event.load'
    - 'proxy.conf'
    - 'proxy.load'
    - 'proxy_balancer.load'
    - 'proxy_html.conf'
    - 'proxy_html.load'
    - 'proxy_http.load'
    - 'proxy_wstunnel.load'
    - 'status.load'
    - 'headers.load'
    - 'lbmethod_bybusyness.load'
    - 'lbmethod_byrequests.load'
    - 'lbmethod_bytraffic.load'
    - 'log_forensic.load'



- name: '/etc/apache2/mods-available/alias.conf'
  copy:
    dest: /etc/apache2/mods-available/alias.conf
    content: '## managed by ansible'







- name: /etc/apache2/conf-available/marttiphpbb_trustxforwardedfor_ips.conf
  copy:
    dest:  '/etc/apache2/conf-available/marttiphpbb_trustxforwardedfor_ips.conf'
    owner: root
    group: www-data
    mode:  '0644'
    src:   "{{ role_path }}/files/marttiphpbb_trustxforwardedfor_ips.conf"

- name: /etc/apache2/conf-available/phpbb_security.conf
  copy:
    dest:  '/etc/apache2/conf-available/phpbb_security.conf'
    owner: root
    group: www-data
    mode:  '0644'
    src:   "{{ role_path }}/files/phpbb_security.conf"



- name: /etc/apache2/conf-available/wordpress_login_url.conf
  copy:
    dest:  '/etc/apache2/conf-available/wordpress_login_url.conf'
    owner: root
    group: root
    mode:  '0755'
    content: |+
      RewriteEngine On
      RewriteCond %{HTTP_COOKIE} !JgUm0AThr3j5UWgjvh5exSmTp
      RewriteRule /wp-login.php /starwars-login-OffHApAiB.php [R,L]
      <Location /starwars-login-OffHApAiB.php>
        CookieTracking on
        CookieExpires 30
        CookieName JgUm0AThr3j5UWgjvh5exSmTp
      </Location>
      RewriteRule /starwars-login-OffHApAiB.php /wp-login.php [NE]


- name: /var/www/wordpress_lockdown.sh
  copy:
    dest:  '/var/www/wordpress_lockdown.sh'
    owner: root
    group: root
    mode:  '0750'
    src:   "{{ role_path }}/files/wordpress_lockdown.sh"

- name: /var/www/wordpress_unlock.sh
  copy:
    dest:  '/var/www/wordpress_unlock.sh'
    owner: root
    group: root
    mode:  '0750'
    src:   "{{ role_path }}/files/wordpress_unlock.sh"

- name: /var/www/make_robots_txt.py
  copy:
    dest:  '/var/www/make_robots_txt.py'
    owner: root
    group: root
    mode:  '0750'
    src:   "{{ role_path }}/files/make_robots_txt.py"




- name: /usr/local/sbin/set_wordpress_login_url.py
  copy:
    dest:  '/usr/local/sbin/set_wordpress_login_url.py'
    owner: root
    group: root
    mode:  '0750'
    src:   "{{ role_path }}/files/set_wordpress_login_url.py"

- name: "set wordpress login url"
  cron:
    name:    "set wordpress login url"
    user:    root
    minute:  "0,10,20,30,40,50"
    job:     '/usr/local/sbin/set_wordpress_login_url.py 1>/dev/null 2>&1'



- name: /usr/local/sbin/make_wp-login_denied_conf.sh
  copy:
    dest:  '/usr/local/sbin/make_wp-login_denied_conf.sh'
    owner: root
    group: root
    mode:  '0750'
    src:   "{{ role_path }}/files/make_wp-login_denied_conf.sh"

- name: "make wp-login_denied.conf"
  cron:
    name:    "make wp-login_denied.conf"
    user:    root
    hour:    "0,3,6,9,12,18"
    minute:  "0"
    job:     '/usr/local/sbin/make_wp-login_denied_conf.sh 1>/dev/null 2>&1'





- name: /etc/apache2/conf-enabled/block-msie6.conf
  copy:
    dest:  '/etc/apache2/conf-enabled/block-msie6.conf'
    owner: root
    group: root
    mode:  '0755'
    content: |+
      SetEnvIfNoCase User-Agent 'MSIE 6.0' bad_actor
      SetEnvIfNoCase User-Agent 'MSIE 7.0' bad_actor
      SetEnvIfNoCase User-Agent 'MSIE 8.0' bad_actor
      SetEnvIfNoCase User-Agent 'MSIE 9.0' bad_actor
      SetEnvIfNoCase User-Agent 'MSIE 10.0' bad_actor
      SetEnvIfNoCase User-Agent 'MSIE 11.0' bad_actor
      SetEnvIfNoCase User-Agent 'Firefox/5' bad_actor
      SetEnvIfNoCase User-Agent 'Firefox/60' bad_actor
      SetEnvIfNoCase User-Agent 'Firefox/61' bad_actor
      SetEnvIfNoCase User-Agent 'Firefox/62' bad_actor
      SetEnvIfNoCase User-Agent 'Firefox/63' bad_actor
      SetEnvIfNoCase User-Agent 'Firefox/64' bad_actor
      SetEnvIfNoCase User-Agent 'Firefox/65' bad_actor
      SetEnvIfNoCase User-Agent 'Firefox/66' bad_actor
      SetEnvIfNoCase User-Agent 'Firefox/67' bad_actor
      SetEnvIfNoCase User-Agent 'SeznamBot' bad_actor
      <Directory "/var/www">
              Order Allow,Deny
              Allow from all
              Deny from env=bad_actor
      </Directory>
      LogFormat "%a %{User-agent}i" ipagent
      CustomLog /var/log/apache2/useragent.log ipagent









- name: '/var/www/html/robots.txt'
  copy:
    dest: /var/www/html/robots.txt
    owner: root
    group: www-data
    mode:  '0640'
    content: |
      User-agent: *
      Disallow: /






##
## Enable logrotate with maxsize 500M
##
- name: '/etc/logrotate.d/apache2'
  copy:
    owner: root
    group: root
    mode:  '0644'
    dest:  /etc/logrotate.d/apache2
    src:   "{{ role_path }}/files/logrotate_apache2"




##
## Custom JSON error files
##
- name: "Custom JSON error pages: /var/www/html/{{ item.key }}"
  copy:
    dest:   "/var/www/html/{{ item.key }}"
    owner:  'www-data'
    group:  'www-data'
    mode:   '0644'
    content: "{{ item.value }}"
  with_dict: "{{ json_error_files }}"

##
## Overwrite the default error files
##
- name: "Default error pages: /usr/share/apache2/error/{{ item.key }}"
  copy:
    dest:    "/usr/share/apache2/error/{{ item.key }}"
    owner:   'www-data'
    group:   'www-data'
    mode:    '0644'
    content: "{{ item.value }}"
  with_dict: "{{ default_error_files }}"



- name: /etc/apache2/conf-enabled/error_pages.conf
  copy:
    dest:  '/etc/apache2/conf-enabled/error_pages.conf'
    owner: root
    group: root
    mode:  '0644'
    content: |+
      Alias /error/ "/var/www/html/"
      <Directory "/var/www/html/">
        Options IncludesNoExec
        Order allow,deny
        Allow from all
      </Directory>




- name: "Empty default files: {{ item }}"
  copy:
    dest:    "{{ item }}"
    owner:   'www-data'
    group:   'www-data'
    mode:    '0644'
    content: ''
  with_items:
    - /usr/share/apache2/error/README
    - /usr/share/apache2/error/include/top.html
    - /usr/share/apache2/error/include/spacer.html
    - /usr/share/apache2/error/include/bottom.html
    - /var/www/favicon.ico
    - /var/www/html/favicon.ico





- name: "Redirecting default html files: {{ role_path }}/files/index.html"
  copy:
    owner: root
    group: www-data
    mode:  '0644'
    dest:  "{{ item }}"
    src:   "{{ role_path }}/files/index.html"
  with_items:
    - "/var/www/index.html"
    - "/var/www/html/index.html"
    - "/usr/share/apache2/default-site/index.html"


##
## vhosts
##
- name: "/etc/apache2/sites-available/{{ item.value.vhost_weight }}-{{ item.value.vhost_protocol }}-{{ item.value.vhost_servername }}-{{ item.value.vhost_port }}.conf"
  template:
    dest:  "/etc/apache2/sites-available/{{ item.value.vhost_weight }}-{{ item.value.vhost_protocol }}-{{ item.value.vhost_servername }}-{{ item.value.vhost_port }}.conf"
    owner: 'root'
    group: 'www-data'
    mode:  '0755'
    src:   "{{ role_path }}/templates/vhost.conf.j2"
  vars:
    vhost_weight:     "{{ item.value.vhost_weight     | default('200', true)  }}"
    vhost_protocol:   "{{ item.value.vhost_protocol   | default('http', true)  }}"
    vhost_port:       "{{ item.value.vhost_port       | default('80', true)  }}"
    vhost_servername: "{{ item.value.vhost_servername | default('localhost', true)  }}"
    vhost_aliases:    "{{ item.value.vhost_aliases    | default('', true)  }}"
    vhost_cert_file:  "{{ item.value.vhost_cert_file  | default('false', true) }}"
    vhost_key_file:   "{{ item.value.vhost_key_file   | default('false', true) }}"
    vhost_chain_file: "{{ item.value.vhost_chain_file | default('false', true) }}"
    vhost_custom_fragment: "{{ item.value.vhost_custom_fragment | default('', true) }}"
  with_dict: "{{ apache2_vhosts }}"


- name: "/etc/apache2/sites-enabled/{{ item.value.vhost_weight }}-{{ item.value.vhost_protocol }}-{{ item.value.vhost_servername }}-{{ item.value.vhost_port }}.conf"
  file:
    ## dest is the link being created
    ## src  is what the link points at
    dest:  "/etc/apache2/sites-enabled/{{ item.value.vhost_weight }}-{{ item.value.vhost_protocol }}-{{ item.value.vhost_servername }}-{{ item.value.vhost_port }}.conf"
    src:   "/etc/apache2/sites-available/{{ item.value.vhost_weight }}-{{ item.value.vhost_protocol }}-{{ item.value.vhost_servername }}-{{ item.value.vhost_port }}.conf"
    state: link
  with_dict: "{{ apache2_vhosts }}"






- name: apache2 service
  service:
    name:    apache2
    enabled: true
    state:   restarted


